{
  hostname_prefix = '',
  site_name = 'Freifunk München',
  site_code = 'ffmuc',
  opkg_repo = 'http://openwrt.draic.info/barrier_breaker/14.07/%S/packages',

  prefix4 = '10.80.0.0/16',
  prefix6 = 'fdef:ffc0:4fff::/64',

  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',
  ntp_servers = {'de.pool.ntp.org'},

  regdom = 'DE',

  wifi24 = {
    ssid = 'muenchen.freifunk.net',
    channel = 6,
    htmode = 'HT20',
    mesh_ssid = 'mesh.ffmuc',
    mesh_bssid = '02:0E:8E:1E:61:17',
    mesh_mcast_rate = 12000,
  },

  wifi5 = {
    ssid = 'muenchen.freifunk.net',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = 'mesh.ffmuc',
    mesh_bssid = '02:0E:8E:1E:61:17',
    mesh_mcast_rate = 12000,
  },

  next_node = {
    ip4 = '10.80.0.1',
    ip6 = 'fdef:ffc0:4fff::1',
    mac = '16:41:95:40:f7:dc',
  },

  fastd_mesh_vpn = {
    methods = {'salsa2012+umac'},
    mtu = 1426,
    backbone = {
      limit = 2,
      peers = {
        gw02 = {   --[[ mephisto ]]
          key = '7f7970e0fe5622aa4e308e003812bf2f60f5f1956c58ea20969a1106e6c793c0',
          remotes = {
            '"gw02.ffmuc.net" port 10000',
            '"gw02.freifunk-muenchen.de" port 10000',
          },
        },
        gwtest1 = {   
          key = 'e476fb3a72365b550a23b587c0962eed362ed0c237175552b3261d22daaa2055',
          remotes = { 
            '"gwtest1.ffmuc.net" port 10000',
          },  
        },  

        gwtest2 = { 
          key = 'b86f436c9bb13b308dc92c3889fd468c46679d9df0bf4892244372ab415694d0',
          remotes = { 
            '"gwtest2.ffmuc.net" port 10000',
          },  
        },  

        gwtest3 = { 
          key = '77b5f5189c360b245e1c934941468cc9cf57f0646465be5765593a95e54449d6',
          remotes = { 
            '"gwtest3.ffmuc.net" port 10000',
          },  
        }  
      },
    },
  },

  autoupdater = {
    enabled = 1,
    branch = 'experimental',
    branches = {
      stable = {
        name = 'stable',
        mirrors = {
          'http://[fdef:ffc0:4fff::11]/firmware/stable/sysupgrade/',
          'http://[fdef:ffc0:4fff::12]/firmware/stable/sysupgrade/',
          'http://[fdef:ffc0:4fff::13]/firmware/stable/sysupgrade/',
          'http://[fdef:ffc0:4fff::130]/firmware/stable/sysupgrade/',
        },
        probability = 0.08,
        good_signatures = 2,
        pubkeys = {
          '2a74ed02120a7d48bb2dc9be988b3480ed99844054b3d7f3e5d3df27d19d814b', -- ole
          '7e3bd782e40189b903b3fb1e488d64b23aa04bc353b1a521b4cd50e70b299113', -- fpletz
          '2f92051ac4452d6026061e6c3719ffbd4f34ba7fbc474439fc6f857b76159bae', -- build.freifunk-muenchen.de (fpletz)
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = {
          'http://[fdef:ffc0:4fff::130]/firmware/experimental/sysupgrade/',
        },
        probability = 0.1,
        good_signatures = 1,
        pubkeys = {
          '2f92051ac4452d6026061e6c3719ffbd4f34ba7fbc474439fc6f857b76159bae', -- build.freifunk-muenchen.de (fpletz)
				},
			},
		},
	},



	--[[	Simple TC settings to limit the bandwidth of the vpn-uplink
		mesh_vpn:
		sub
		ifname:		name of the interface/bridge
		enabled:	default-value
		limit_egress:	default-value
		limit_ingress:	default-value ]]

	simple_tc = {
		mesh_vpn = {
			ifname = 'mesh-vpn',
			enabled = false,
			limit_egress = 1200,
			limit_ingress = 12000,
		},
	},


	--[[	Config Mode settings
		Text shown on local website on node while in config mode (after initial flashing or after a long press and hold on the primary button and reboot). You can use html here.
		msg_welcome: Welcome message shown at startup
		msg_pubkey: Instructions for the user how your community handles the key exchange
		only shown if VPN setting is selected
		msg_reboot: Message shown when configuration is finished while the node is rebooting.

		Variables
		Within the text given here you can use variables which are
		replaced when the respective website is delivered to the user.
		Variables must be used in the format <%=NAME%>. See msg_pubkey for an example.
		hostname: hostname of the node
		pubkey: fastd public key of the node
		sysconfig.primary_mac	the primary mac of the node, also found printed beneath the device
		... other sysconfig.* variables: config_ifname, lan_ifname, wan_ifname ]]


	config_mode = {
		msg_welcome = [[
Willkommen zum Einrichtungsassistenten für deinen neuen Münchner
Freifunk-Knoten. Fülle das folgende Formular deinen Vorstellungen
entsprechend aus und sende es ab.
]],
		msg_pubkey = [[ ]],
		msg_reboot = [[
<p>
Dein Knoten startet gerade neu und wird anschließend versuchen,
sich mit anderen Freifunk-Knoten in seiner Nähe zu
verbinden. Weitere Informationen zur
Münchner Freifunk-Community findest du auf
<a href="http://freifunk-muenchen.de/">unserer Webseite</a>. Wenn alles geklappt hat, wirst du unter <a href="http://map.freifunk-muenchen.de">map.freifunk-muenchen.de</a> deinen Knoten finden.
</p>
<p>
Wenn Du mehr über Freifunk in München erfahren möchtest, dann besuche uns doch auf unserem monatlichen Treffen (siehe Webseite). Um mehr Einfluss auf die Entwicklung zu nehmen, hast Du als Knotenbetreiber zusätzlich die Möglichkeit in unserem <a href="https://lqfb.freifunk-muenchen.de">Abstimmungs- und Dokumentationssystem</a> mitzumachen. Voraussetzung ist eine persönliche Anmeldung auf einem der Treffen.
</p>
<p>
Viel Spaß mit deinem Knoten und der Erkundung von Freifunk!
</p>
]],
	},
}
-- vim: set ft=lua:ts=2:sw=2:et
